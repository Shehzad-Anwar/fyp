import React, { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";
import Head from "next/head";

const orderhistory = () => {
  const router = useRouter();
  const [myOrders, setmyOrders] = useState([]);
  const [tootip, settootip] = useState(false);
  const [Text, setText] = useState("COPY");
  const [date, setDate] = useState("");
  let d = new Date();

  useEffect(() => {
    const fetchOrders = async () => {
      let token = localStorage.getItem("token");
      let response = await fetch(
        `${process.env.NEXT_PUBLIC_HOST}/api/Order/get?all=true`,
        {
          method: "GET", // or 'PUT'
          headers: {
            "Content-Type": "application/json",
            Authorization: token,
          },
          //   body: JSON.stringify({ token: localStorage.getItem('token') }),
        }
      );
      let res = await response.json();
      setmyOrders(res.orders);
    };
    if (!localStorage.getItem("token")) {
      router.push("/");
    } else {
      fetchOrders();
    }
  }, []);

  const textChange = () => {
    setText("COPIED");

    setTimeout(() => {
      setText("COPY");
    }, 3000);
  };
  const copyOrderID = (event) => {
    let copyText = event.target.innerHTML;
    navigator.clipboard.writeText(copyText);
    textChange()
  };

  const orders = [
    // Order Number 1
    {
      number: "Bw88192222",
      date: "January 1, 2022",
      datetime: "2021-01-22",
      invoiceHref: "#",
      total: "$104.00",
      products: [
        {
          id: 1,
          name: "Men's Shawl",
          href: "#",
          price: "$36.00",
          status: "Delivered Jan 25, 2021",
          imageSrc: "/Mens_Shawl.png",
          imageAlt:
            "Black tee with intersecting red, white, and green curved lines on front.",
        },
        // More products...
      ],
    },

    // Order number 2
    {
      number: "WU88191111",
      date: "January 22, 2021",
      datetime: "2021-01-22",
      invoiceHref: "#",
      total: "$104.00",
      products: [
        {
          id: 1,
          name: "Men's 3D Glasses Artwork Tee",
          href: "#",
          price: "$36.00",
          status: "Delivered Jan 25, 2021",
          imageSrc:
            "https://tailwindui.com/img/ecommerce-images/order-history-page-04-product-01.jpg",
          imageAlt:
            "Black tee with intersecting red, white, and green curved lines on front.",
        },
        // More products...
      ],
    },
    // More orders...
  ];

  return (
    <>
      <Head>
        <title>Orders E-Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.ico" />
      </Head>
      <div className="bg-white">
        <main className="mx-auto max-w-7xl py-16 px-4 sm:px-6 lg:px-8 lg:pb-24">
          <div className="max-w-xl">
            <h1 className="text-2xl font-bold tracking-tight text-gray-900 sm:text-3xl">
              Order history
            </h1>
            <p className="mt-1 text-sm text-gray-500">
              Check the status of recent orders, manage returns, and download
              invoices.
            </p>
          </div>

          <section aria-labelledby="recent-heading" className="mt-16">
            <h2 id="recent-heading" className="sr-only">
              Recent orders
            </h2>

            <div className="space-y-5">
              {!myOrders ?(
                // Some UI constraint. ----[Pendind]
                <h1>Sorry, You`t order anything!</h1>
              )
              
              : (myOrders.map((item) => (
                <div key={item.orderID}>
                  <h3 className="sr-only">
                    Order placed on{" "}
                    {date &&
                      date.toLocaleDateString("en-PK", {
                        weekday: "long",
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                      })}
                    {/* <time dateTime={item.datetime}>{item.date}</time> */}
                  </h3>

                  <div className="rounded-lg bg-gray-100 py-6 px-4 sm:flex sm:items-center sm:justify-between sm:space-x-6 sm:px-6 lg:space-x-8">
                    <dl className="flex-auto space-y-6 divide-y divide-gray-200 text-sm text-gray-600 sm:grid sm:grid-cols-4 sm:gap-x-6 sm:space-y-0 sm:divide-y-0 lg:w-1/2 lg:flex-none lg:gap-x-8">
                      <div className="flex justify-between sm:block">
                        <dt className="font-medium text-gray-900">
                          Date placed
                        </dt>
                        <dd className="sm:mt-1">
                          {item.updatedAt &&
                            d.toLocaleDateString("en-PK", {
                              weekday: "long",
                              year: "numeric",
                              month: "long",
                              day: "numeric",
                            })}
                          {/* <time dateTime={item.updatedAt}>{Date(item.updatedAt)}</time> */}
                        </dd>
                      </div>
                      <div className="flex justify-between pt-6 sm:block sm:pt-0">
                        <dt className="font-medium text-gray-900">
                          Order number
                        </dt>
                        <dd className="sm:mt-1">
                          {/* <p> */}
                            <p
                              className="cursor-pointer hover:text-blue-700 transition duration-50 ease-in-out"
                              data-bs-toggle="tooltip"
                              data-bs-placement="top"
                              title={Text}
                              onClick={copyOrderID}
                              >
                              {item.orderID}
                            </p>
                          {/* </p> */}
                          </dd>
                      
                      </div>
                      <div className="flex justify-between pt-6 text-gray-900 sm:block sm:pt-0">
                        <dt className="font-medium text-gray-900">
                          Order Status
                        </dt>
                        <dd className="sm:mt-1 font-semibold">{item.status}</dd>
                      </div>
                      <div className="flex justify-between pt-6 font-medium text-gray-900 sm:block sm:pt-0">
                        <dt>Total amount</dt>
                        <dd className="sm:mt-1">Pkr {item.amount}</dd>
                      </div>
                    </dl>
                    <Link href={`/order/?id=${item.orderID}`}>
                      <p className="mt-6 flex w-full items-center justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto">
                        View Invoice
                        <span className="sr-only">
                          for Order {item.orderID}
                        </span>
                      </p>
                    </Link>
                  </div>
                </div>)
              ))}
            </div>
          </section>
        </main>
      </div>
    </>
  );
};

export default orderhistory;
