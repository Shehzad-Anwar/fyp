import React, { useState, useEffect } from "react";
import Order from "../models/Order";
import mongoose from "mongoose";
import Head from "next/head";
import cookies from "next-cookies";

const order = ({ order }) => {
  const [tootip, settootip] = useState(false);
  const [Text, setText] = useState("COPY");
  const [date, setDate] = useState("");
  const [Products, setProducts] = useState(order.products);
  const [Step, setStep] = useState(-1);

  useEffect(() => {
    if (order.status == "Initiate") {
      setStep(0);
    } else if (order.status == "Pending") {
      setStep(1);
    } else if (order.status == "Placed") {
      setStep(2);
    } else if (order.status == "Shipped") {
      setStep(3);
    } else if (order.status == "Delivered") {
      setStep(4);
    }
    const d = new Date(order.createdAt);
    setDate(d);
  }, []);

  const textChange = () => {
    setText("COPIED");

    setTimeout(() => {
      setText("COPY");
    }, 3000);
  };
  const copyOrderID = (event) => {
    let copyText = event.target.innerHTML;
    navigator.clipboard.writeText(copyText);
  };

  return (
    <>
      <Head>
        <title>Order Invoice</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.ico" />
      </Head>
      <div className="bg-white">
        {/* Order Detail section */}
        <main className="mx-auto max-w-7xl px-4 py-16 sm:px-6 sm:py-20 lg:px-8">
          <h1 className="text-3xl font-bold tracking-tight text-gray-900">
            Order Detail
          </h1>
          <div className="mt-2 border-b border-gray-200 pb-5 text-sm sm:flex sm:justify-between">
            <dl className="flex">
              <dt className="text-gray-500">Order number&nbsp;</dt>
              <dd className="font-medium text-gray-900">{order.orderID}</dd>
              <dt>
                <span className="sr-only">Date</span>
                <span className="mx-2 text-gray-400" aria-hidden="true">
                  &middot;
                </span>
              </dt>
              <dd className="font-medium text-gray-900">
                <time dateTime="2021-03-22">
                  {date &&
                    date.toLocaleDateString("en-PK", {
                      weekday: "long",
                      year: "numeric",
                      month: "long",
                      day: "numeric",
                    })}
                </time>
              </dd>
            </dl>
          </div>

          {/* Product */}
          <section aria-labelledby="products-heading" className="mt-8">
            <h2 id="products-heading" className="sr-only">
              Products purchased
            </h2>
            <table className="mt-4 w-full  text-gray-500 sm:mt-6">
              <caption className="sr-only">Products</caption>
              <thead className="sr-only text-left text-sm text-gray-500 sm:not-sr-only">
                <tr>
                  <th
                    scope="col"
                    className="py-3 pr-8 font-normal sm:w-2/5 lg:w-1/3"
                  >
                    Product
                  </th>

                  <th
                    scope="col"
                    className="hidden w-1/5 py-3 pr-16 font-normal sm:table-cell"
                  >
                    Size
                  </th>
                  <th
                    scope="col"
                    className="hidden w-1/5 py-3 pr-16 font-normal sm:table-cell"
                  >
                    Colour
                  </th>
                  <th
                    scope="col"
                    className="hidden w-1/5 py-3 pr-16 font-normal sm:table-cell"
                  >
                    Quantity
                  </th>
                  <th
                    scope="col"
                    className="hidden w-1/5 py-3 pr-16 font-normal sm:table-cell"
                  >
                    Price
                  </th>
                  <th
                    scope="col"
                    className="hidden w-1/5 py-3 pr-16 font-normal sm:table-cell"
                  >
                    Status
                  </th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-200 border-b border-gray-200 text-sm sm:border-t">
                {Object.keys(Products).map((slug) => (
                  <tr key={Products[slug].id}>
                    <td className="py-6">
                      <div className="flex items-center">
                        <img
                          src={
                            Products[slug].img.length < 40
                              ? "../Products/" + Products[slug].img
                              : Products[slug].img
                          }
                          alt={Products[slug].name}
                          className="mr-6 h-16 w-16 rounded object-cover object-center"
                        />
                        <div>
                          <div className="font-medium text-gray-900">
                            {Products[slug].name}
                          </div>
                          <div className="mt-1 sm:hidden">
                            {Products[slug].price}
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className="hidden py-6 pr-20 sm:table-cell">
                      {Products[slug].size}
                    </td>
                    <td className="hidden py-6 pr-20 sm:table-cell">
                      <button
                        style={{
                          backgroundColor: Products[slug].varient,
                          opacity: 50,
                        }}
                        className={`border-2 ml-1 rounded-md w-6 h-6 focus:outline-none ${
                          Products[slug].color == "black"
                            ? "border-white"
                            : "border-gray-500"
                        }`}
                      ></button>
                    </td>
                    <td className="hidden py-6 pr-20 sm:table-cell">
                      {Products[slug].qty}
                    </td>
                    <td className="hidden py-6 pr-20 sm:table-cell">
                      {Products[slug].price}
                    </td>

                    <td className="hidden py-6 sm:table-cell">
                      {order.status}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>

            {/* Progress bar */}
            <div className="space-y-24">
              <div
                key={order.orderID}
                className="grid grid-cols-1 text-sm sm:grid-cols-12 sm:grid-rows-1 sm:gap-x-6 md:gap-x-8 lg:gap-x-8"
              >
                <div className="sm:col-span-12 md:col-span-6">
                  {/* Status Bar Area */}
                  <p className="mt-6 font-medium text-gray-900 md:mt-10">
                    {order.status} on{" "}
                    <span className="font-bold">
                      {date &&
                        date.toLocaleDateString("en-PK", {
                          weekday: "long",
                          year: "numeric",
                          month: "long",
                          day: "numeric",
                        })}
                    </span>
                  </p>
                  <div className="mt-6">
                    <div className="overflow-hidden rounded-full bg-gray-200">
                      <div
                        className={
                          Step == 4
                            ? "h-2 rounded-full bg-green-500"
                            : "h-2 rounded-full bg-indigo-600"
                        }
                        style={{
                          width: `calc((${Step} * 2 + 1) / 8 * 100%)`,
                        }}
                      />
                    </div>
                    <div className="mt-6 hidden grid-cols-5 text-gray-600 sm:grid">
                      <div className="text-indigo-600 font-bold">Initiate</div>
                      <div
                        className={
                          Step >= 1
                            ? "text-indigo-600 font-bold text-center"
                            : Step == 4
                            ? "text-green-500 font-bold text-center"
                            : "text-center font-medium"
                        }
                      >
                        Pending
                      </div>
                      <div
                        className={
                          Step >= 2
                            ? "text-indigo-600 font-bold text-center"
                            : Step == 4
                            ? "text-green-500 font-bold text-center"
                            : "text-center font-medium"
                        }
                      >
                        Placed
                      </div>
                      <div
                        className={
                          Step >= 3
                            ? "text-indigo-600 font-bold text-center"
                            : Step == 4
                            ? "text-green-500 font-bold text-center"
                            : "text-center font-medium"
                        }
                      >
                        Shipped
                      </div>
                      <div
                        className={
                          Step >= 4
                            ? "text-green-500 font-bold text-center"
                            : "text-center font-medium"
                        }
                      >
                        Delivered
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* Billing */}
          <section aria-labelledby="summary-heading" className="mt-20">
            <h2 id="summary-heading" className="sr-only">
              Billing Summary
            </h2>

            <div className="rounded-lg bg-gray-50 py-6 px-6 lg:grid lg:grid-cols-12 lg:gap-x-8 lg:px-0 lg:py-8">
              <dl className="grid grid-cols-1 gap-6 text-sm sm:grid-cols-3 md:gap-x-8 lg:col-span-7 lg:pl-8">
                <div>
                  <dt className="font-medium text-gray-900">Billing address</dt>
                  <dd className="mt-3 text-gray-500">
                    <span className="block">{order.address}</span>
                    <span className="block">{order.city}</span>
                    <span className="block">{order.apartment}</span>
                  </dd>
                </div>
                <div>
                  <dt className="font-medium text-gray-900">
                    Order Information
                  </dt>
                  <dd className="mt-3 text-gray-500 font-semibold">
                    <span className="block">
                      {order.firstName + " " + order.lastName}
                    </span>
                    {/* <span className="block"> {order.name}</span> */}
                    <span className="block"> {order.email}</span>
                    <span className="block"> {order.phone}</span>
                  </dd>
                </div>
                <div>
                  <dt className="font-medium text-gray-900">
                    Payment information (demo detials)
                  </dt>
                  <dd className="mt-3 flex">
                    <div>
                      <svg
                        aria-hidden="true"
                        width={36}
                        height={24}
                        viewBox="0 0 36 24"
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-6 w-auto"
                      >
                        <rect width={36} height={24} rx={4} fill="#224DBA" />
                        <path
                          d="M10.925 15.673H8.874l-1.538-6c-.073-.276-.228-.52-.456-.635A6.575 6.575 0 005 8.403v-.231h3.304c.456 0 .798.347.855.75l.798 4.328 2.05-5.078h1.994l-3.076 7.5zm4.216 0h-1.937L14.8 8.172h1.937l-1.595 7.5zm4.101-5.422c.057-.404.399-.635.798-.635a3.54 3.54 0 011.88.346l.342-1.615A4.808 4.808 0 0020.496 8c-1.88 0-3.248 1.039-3.248 2.481 0 1.097.969 1.673 1.653 2.02.74.346 1.025.577.968.923 0 .519-.57.75-1.139.75a4.795 4.795 0 01-1.994-.462l-.342 1.616a5.48 5.48 0 002.108.404c2.108.057 3.418-.981 3.418-2.539 0-1.962-2.678-2.077-2.678-2.942zm9.457 5.422L27.16 8.172h-1.652a.858.858 0 00-.798.577l-2.848 6.924h1.994l.398-1.096h2.45l.228 1.096h1.766zm-2.905-5.482l.57 2.827h-1.596l1.026-2.827z"
                          fill="#fff"
                        />
                      </svg>
                      <p className="sr-only">Visa (demo detials) </p>
                    </div>
                    <div className="ml-4">
                      <p className="text-gray-900">Ending with 4242</p>
                      <p className="text-gray-600">Expires 02 / 24</p>
                    </div>
                  </dd>
                </div>
              </dl>

              <dl className="mt-8 divide-y divide-gray-200 text-sm lg:col-span-5 lg:mt-0 lg:pr-10">
                <div className="flex items-center justify-between pb-4">
                  <dt className="text-gray-600">Subtotal</dt>
                  <dd className="font-medium text-gray-900">
                    Pkr {order.amount}
                  </dd>
                </div>
                <div className="flex items-center justify-between py-4">
                  <dt className="text-gray-600">Shipping (demo)</dt>
                  <dd className="font-medium text-gray-900">$5</dd>
                </div>
                <div className="flex items-center justify-between py-4">
                  <dt className="text-gray-600">Tax (demo)</dt>
                  <dd className="font-medium text-gray-900">$6.16</dd>
                </div>
                <div className="flex items-center justify-between pt-4">
                  <dt className="font-medium text-gray-900">Order total</dt>
                  <dd className="font-medium text-indigo-600">
                    Pkr {order.amount}
                  </dd>
                </div>
              </dl>
            </div>
          </section>
        </main>
      </div>
    </>
  );
};

export async function getServerSideProps(context) {
  if (!mongoose.connection.readyState) {
    mongoose.connect(process.env.MONGO_URI);
  }
  const { user } = cookies(context);
  let order;
  if (context.query.id) {
    order = await Order.findOne({
      orderID: context.query.id,
      userId: user.userId,
    });
    order = JSON.parse(JSON.stringify(order));
  } else {
    order = false;
  }

  return {
    props: { order: order },
  };
}

export default order;
